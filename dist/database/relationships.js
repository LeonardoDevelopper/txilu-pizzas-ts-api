"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const account_1 = __importDefault(require("../models/admin/account"));
const location_1 = __importDefault(require("../models/admin/location"));
const account_2 = __importDefault(require("../models/client/account"));
const cart_1 = __importDefault(require("../models/client/cart"));
const favorite_deliver_1 = __importDefault(require("../models/client/favorite_deliver"));
const favorite_pizza_1 = __importDefault(require("../models/client/favorite_pizza"));
const local_delivery_1 = __importDefault(require("../models/client/local_delivery"));
const account_3 = __importDefault(require("../models/deliver/account"));
const rate_1 = __importDefault(require("../models/deliver/rate"));
const location_2 = __importDefault(require("../models/deliver/location"));
const items_1 = __importDefault(require("../models/order/items"));
const order_1 = __importDefault(require("../models/order/order"));
const category_1 = __importDefault(require("../models/pizza/category"));
const pizza_1 = __importDefault(require("../models/pizza/pizza"));
const rate_2 = __importDefault(require("../models/pizza/rate"));
account_2.default.hasMany(local_delivery_1.default, { constraint: true });
account_2.default.hasOne(cart_1.default, { constraint: true });
account_2.default.hasMany(favorite_deliver_1.default, { constraint: true });
account_2.default.hasMany(favorite_pizza_1.default, { constraint: true });
account_2.default.hasMany(order_1.default, { constraint: true });
account_2.default.hasMany(rate_2.default, { constraint: true });
account_2.default.hasMany(rate_1.default, { constraint: true });
order_1.default.belongsToMany(pizza_1.default, { through: items_1.default, constraint: true });
account_1.default.hasOne(location_1.default, { constraint: true });
pizza_1.default.belongsToMany(order_1.default, { through: items_1.default, constraint: true });
pizza_1.default.hasMany(rate_2.default, { constraint: true });
pizza_1.default.hasMany(cart_1.default, { constraint: true });
category_1.default.hasMany(pizza_1.default, { constraint: true });
account_3.default.hasOne(location_2.default, { constraint: true });
account_3.default.hasMany(order_1.default, { constraint: true });
account_3.default.hasMany(rate_1.default, { constraint: true });
